"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","c37e3cc1b76e456941787abfa9ba2ef7"],["/static/css/main.66dba5ca.css","2baddd0fb72668dc0c5e56a7518d54ac"],["/static/js/about.page.55ba9fab.chunk.js","c5bb738e446b4539fb642026ec8c4b0e"],["/static/js/gist.page.8986175a.chunk.js","60900e26a2e7403f44706f9af49a8658"],["/static/js/gists.page.c05f7383.chunk.js","9c817871b3b75c31a27b8768d42669a2"],["/static/js/github.page.0ccce868.chunk.js","b6f79262ded759698c6c246ab2beb61e"],["/static/js/home.page.31056097.chunk.js","36cfc79b7865e30961207bcbaa3affbc"],["/static/js/main.dfe41949.js","6b81ed58035a665309e068618e729204"],["/static/js/post.page.a9ae3b4e.chunk.js","47391e35533e3b472f43a7ea93adfb5f"],["/static/js/posts.page.599b1e4a.chunk.js","9991b2a65a46d55b424b4350c4dc46cd"],["/static/js/react-chart.c22241a4.chunk.js","ba5813e65e9ac4dc4100d08ba34d37c9"],["/static/js/react-github-calendar.b813d66d.chunk.js","8e16c989c2bd1889453990f896bebb6c"],["/static/js/react-qrcode.304b3b95.chunk.js","79db95e38fefe6320e122604819059ab"],["/static/js/repo.page.d6ecbf0f.chunk.js","e9c71068ab1dac15c6267a447032b659"],["/static/js/repos.page.c9f225d4.chunk.js","0266ad00834789a66f0b08e47a2d3f5c"],["/static/js/roll.b8202daa.chunk.js","86a071656e7fc8b0fa9d382a70e9b672"],["/static/js/search.page.d2b8a769.chunk.js","64619b7fc71d0d580e9be83d1c96acfc"],["/static/js/todo.page.94f2ce96.chunk.js","0f348776f7ea3de3be1a59a8c4acb016"],["/static/js/todos.page.4cd7c5b9.chunk.js","5af701b56dff62fdd1f0314b17b7708a"],["/static/media/octicons.260ef443.woff","260ef443edb4dfd026d82e2b21a4c75c"],["/static/media/octicons.7b3fd4b1.eot","7b3fd4b10ef8298c7df5c5acad4b7e42"],["/static/media/octicons.9e5cc6ea.svg","9e5cc6ea569143be7be53e6f6c7bcebf"],["/static/media/octicons.ed294b22.ttf","ed294b221e32c83d9e79195d599313d3"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);t=urlsToCacheKeys.has(a);t||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted([],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});