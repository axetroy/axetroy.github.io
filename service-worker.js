"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","5bc3953825d02f47eac46c5a80f2d18c"],["/static/css/main.66dba5ca.css","2baddd0fb72668dc0c5e56a7518d54ac"],["/static/js/about.page.745a4692.chunk.js","53537f47c936783d1818ae3398a73840"],["/static/js/gist.page.f199268c.chunk.js","f54924ee50cd27f0fea59090548b701d"],["/static/js/gists.page.0b4d9e59.chunk.js","0a4aa4ca580a88e3c407729de1bf8220"],["/static/js/github.page.cc2b549d.chunk.js","05f3d00c0240bf5a1b982c962f7d96f3"],["/static/js/home.page.bb92a41e.chunk.js","7603355d349cc4ea1e624658fae59fa8"],["/static/js/main.ce6e2ffb.js","075caa813e3141234d3db2b40338d6cf"],["/static/js/post.page.fc5cfaac.chunk.js","949eb8cfa142a7eb86d73159e649a94f"],["/static/js/posts.page.67027de8.chunk.js","0c155bbb54f4dfa82a5874992493c082"],["/static/js/react-chart.6eb164b8.chunk.js","43cf875489bf68dfd9c09cf2c9e4215c"],["/static/js/react-github-calendar.b813d66d.chunk.js","8e16c989c2bd1889453990f896bebb6c"],["/static/js/react-qrcode.304b3b95.chunk.js","79db95e38fefe6320e122604819059ab"],["/static/js/repo.page.f291a894.chunk.js","aecd4090b9f4bb3bdb9c868f8d2382a2"],["/static/js/repos.page.9848207c.chunk.js","ab1b48390cec4cdbbfcf217af31b397e"],["/static/js/roll.81c39ea3.chunk.js","9593b32e6caaa79f22833f4966fe3129"],["/static/js/search.page.ffaf0e5b.chunk.js","cd0f7edc527fbceafd765e8d6a650621"],["/static/js/todo.page.85897037.chunk.js","4d5bb623d4fff73de5001549fc80e4e9"],["/static/js/todos.page.9a7ebe36.chunk.js","eb2b97869562bbd6578b4bc575260d21"],["/static/media/octicons.260ef443.woff","260ef443edb4dfd026d82e2b21a4c75c"],["/static/media/octicons.7b3fd4b1.eot","7b3fd4b10ef8298c7df5c5acad4b7e42"],["/static/media/octicons.9e5cc6ea.svg","9e5cc6ea569143be7be53e6f6c7bcebf"],["/static/media/octicons.ed294b22.ttf","ed294b221e32c83d9e79195d599313d3"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);t=urlsToCacheKeys.has(a);t||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted([],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});