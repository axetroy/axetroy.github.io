"use strict";var precacheConfig=[["/index.html","746b2b71929d17097501d1cb161b7391"],["/static/css/main.bc62556c.css","2b999a8f502125f04f32f11b3111261b"],["/static/js/0.2e22e974.chunk.js","381bb1e34128876c4ed601e074a8bfa8"],["/static/js/1.d6764f0d.chunk.js","688c45d058703479f452bdc1268ffdff"],["/static/js/10.9f8760f1.chunk.js","831653143320746d84db3bc252dd3e51"],["/static/js/11.a4929903.chunk.js","32eb6468df2f4b817a54525466847680"],["/static/js/12.9d6f72b3.chunk.js","d8b33a80f36f9567640136b2afbd0b65"],["/static/js/13.c4a3a866.chunk.js","25004800bd9b48abb7721bae98f629ce"],["/static/js/14.58606250.chunk.js","ca778c71979ea65ad59f84caf9eb7a02"],["/static/js/15.749b9a9d.chunk.js","b6ea191f9e2f0101e1eab24c48004a01"],["/static/js/2.3c1b085c.chunk.js","219a965545824a7a4fc46b8191490b1d"],["/static/js/3.2902a29c.chunk.js","2af9fab1d793063b4a19424ef06594a3"],["/static/js/4.4c07eb88.chunk.js","c39b184462f26d10c8550260eb65281b"],["/static/js/5.e757c53e.chunk.js","a7eda600d2af676d92b9c659ab27f77e"],["/static/js/6.2bf9f031.chunk.js","eb4bd47e1d28164567a5acf7512607cd"],["/static/js/7.594bc9e6.chunk.js","a843ab30434d9bcaf24c477902bc26f9"],["/static/js/8.d99e6b5d.chunk.js","24970e48a2dff85673301be8ecd6eaf4"],["/static/js/9.aa2fb28b.chunk.js","f816126e1d38ddaaf41c1465855145ec"],["/static/js/main.54ece5fc.js","118aaf800d43009696a88e433dc461f7"],["/static/media/octicons.190e7257.svg","190e72572ee84190f4777765fa49fc47"],["/static/media/octicons.d038ccbc.eot","d038ccbc4a99be24f33a54b482b2422e"],["/static/media/octicons.de59a972.woff2","de59a97248b44599e6747a27a943f738"],["/static/media/octicons.e0d4a324.ttf","e0d4a324833e13be7d4fa762146d0a71"],["/static/media/octicons.ee5b1bee.woff","ee5b1bee959a95bd43b223ec901d098a"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var c="/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(c,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});