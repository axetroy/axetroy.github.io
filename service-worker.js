"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","951aa7f9f87ee00a8ee7b2717c300070"],["/static/css/main.43986c2a.css","42578300a3da0c58a9740a56a96447f6"],["/static/js/about.page.ce788225.chunk.js","ddb98bdeab9f1f9d1afc8add30b299d0"],["/static/js/gist.page.461c0485.chunk.js","9290dad6fcb57d4c7c5865c1a4a470ac"],["/static/js/gists.page.8d3a8dc7.chunk.js","2e0ba2bc443e55e568719ad6fac4a3d3"],["/static/js/github.page.f2dc0be2.chunk.js","a7aff51020b643f4629f9513edc6ee65"],["/static/js/home.page.9833d823.chunk.js","6f9bb4574095c0fa2ebcb3ce60e9ef9f"],["/static/js/main.c31ac4ce.js","4d78a57b133728d216b45738d7e7355a"],["/static/js/post.page.32833139.chunk.js","a1b52b22df7180dab8595515e5eb4442"],["/static/js/posts.page.1910db56.chunk.js","5e777a2aabc0e8b5c62bd2556f5936d9"],["/static/js/react-chart.e52426de.chunk.js","9283fcb9209474eb685b153af980a90f"],["/static/js/react-github-calendar.c57d0288.chunk.js","a3f56611660dd47c43ea62b853e4f1a6"],["/static/js/react-qrcode.6e36e4bb.chunk.js","4010974c406cf873d29f71caa32f3392"],["/static/js/repo.page.0451271a.chunk.js","183d73ac7b46da86dcac96e1da3320ab"],["/static/js/repos.page.30d9f11b.chunk.js","167140752973f15b2d42400612ee660d"],["/static/js/roll.b8202daa.chunk.js","86a071656e7fc8b0fa9d382a70e9b672"],["/static/js/search.page.886d4e9e.chunk.js","6b71db4cdcf2b4947c26dc44a1ae1b07"],["/static/js/todo.page.af40c785.chunk.js","03d6747532c9e69a6c4a0c692340b506"],["/static/js/todos.page.0ae98cbc.chunk.js","763c455bd239a2597d06d248331dfb93"],["/static/media/octicons.260ef443.woff","260ef443edb4dfd026d82e2b21a4c75c"],["/static/media/octicons.7b3fd4b1.eot","7b3fd4b10ef8298c7df5c5acad4b7e42"],["/static/media/octicons.9e5cc6ea.svg","9e5cc6ea569143be7be53e6f6c7bcebf"],["/static/media/octicons.ed294b22.ttf","ed294b221e32c83d9e79195d599313d3"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);t=urlsToCacheKeys.has(a);t||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted([],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});